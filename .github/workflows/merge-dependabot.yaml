#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
name: merge-dependabot

on:
  pull_request_target:

permissions: read-all

jobs:

  build:
    if: github.repository == 'copernik-eu/log4j-plugins' && github.actor == 'dependabot[bot]'
    uses: copernik-eu/log4j-plugins/.github/workflows/build-reusable.yaml@main

  merge:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:

      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11   # 4.1.1
        with:
          # When running on `pull_request` use the PR branch, not the target branch
          ref: ${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}

      - name: Setup GPG
        id: setup-gpg
        uses: crazy-max/ghaction-import-gpg@82a020f1f7f605c65dd2449b392a52c3fcfef7ef # 6.0.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Diagnostics
        env:
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
          PR_REF: ${{ github.head_ref }}
        run: |
          echo "$HEAD_REF"
          echo "$PR_URL"

      - name: Automatically merge
        env:
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
          PR_REF: ${{ github.head_ref }}
        run: |
          git fetch origin +"$HEAD_REF"
          git cherry-pick main.."$PR_REF"
          git push -f "$PR_URL"
          git push origin
